{"version":3,"sources":["index.js"],"names":["BASE_URL","API_KEY","queryParams","galleryRef","document","querySelector","formRef","query","onSubmit","e","preventDefault","elements","searchQuery","value","console","log","fetchImages","then","renderMarkup","fetch","response","ok","Error","statusText","json","images","markup","hits","map","webformatURL","likes","views","comments","downloads","join","innerHTML","addEventListener"],"mappings":";;;AAiEC,aAjED,QAAA,oBAEA,MAAMA,EAAW,2BACXC,EAAU,qCAEVC,EAAe,yDAEfC,EAAaC,SAASC,cAAc,YACpCC,EAAUF,SAASC,cAAc,gBAEvC,IAAIE,EAAQ,KAUZ,SAASC,EAASC,GAChBA,EAAEC,iBACFH,EAAQD,EAAQK,SAASC,YAAYC,MACrCC,QAAQC,IAAIR,GACZS,IAAcC,KAAKC,GAGrB,SAASF,IACAG,OAAAA,SAASnB,SAAgBC,OAAaM,KAASL,KAAee,KAAKG,IACpE,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,YAEpBH,OAAAA,EAASI,SAIpB,SAASN,EAAaO,GACdC,MAAAA,EAASD,EAAOE,KACnBC,IAAI,EAAGC,aAAAA,EAAcC,MAAAA,EAAOC,MAAAA,EAAOC,SAAAA,EAAUC,UAAAA,kEAG1BJ,mJAINC,6GAIAC,gHAIAC,iHAIAC,uEAMbC,KAAK,IACR/B,EAAWgC,UAAYT,EA9CzBpB,EAAQ8B,iBAAiB,SAAU5B","file":"src.22806195.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '14763371-8ad954d112ffa98330dee37e7';\n\nconst queryParams = `image_type=all&orientation=horizontal&safesearch=false`;\n\nconst galleryRef = document.querySelector('.gallery');\nconst formRef = document.querySelector('.search-form');\n\nlet query = null;\n\n// key - твой уникальный ключ доступа к API.\n// q - термин для поиска. То, что будет вводить пользователь.\n// image_type - тип изображения. Мы хотим только фотографии, поэтому задай значение photo.\n// orientation - ориентация фотографии. Задай значение horizontal.\n// safesearch - фильтр по возрасту. Задай значение true.\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  query = formRef.elements.searchQuery.value;\n  console.log(query);\n  fetchImages().then(renderMarkup);\n}\n\nfunction fetchImages() {\n  return fetch(`${BASE_URL}?key=${API_KEY}&q=${query}&${queryParams}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n}\n\nfunction renderMarkup(images) {\n  const markup = images.hits\n    .map(({ webformatURL, likes, views, comments, downloads }) => {\n      return `\n        <div class=\"photo-card\">\n            <img src=\"${webformatURL}\" alt=\"\" loading=\"lazy\" />\n            <div class=\"info\">\n              <p class=\"info-item\">\n                <b>Likes</b>\n                ${likes}\n              </p>\n              <p class=\"info-item\">\n                <b>Views</b>\n                ${views}\n              </p>\n              <p class=\"info-item\">\n                <b>Comments</b>\n                ${comments}\n              </p>\n              <p class=\"info-item\">\n                <b>Downloads</b>\n                ${downloads}\n              </p>\n            </div>\n        </div>\n        `;\n    })\n    .join('');\n  galleryRef.innerHTML = markup;\n}\n"]}